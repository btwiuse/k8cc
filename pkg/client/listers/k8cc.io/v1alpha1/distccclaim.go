/*
Copyright 2020 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/btwiuse/k8cc/pkg/apis/k8cc.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DistccClaimLister helps list DistccClaims.
type DistccClaimLister interface {
	// List lists all DistccClaims in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DistccClaim, err error)
	// DistccClaims returns an object that can list and get DistccClaims.
	DistccClaims(namespace string) DistccClaimNamespaceLister
	DistccClaimListerExpansion
}

// distccClaimLister implements the DistccClaimLister interface.
type distccClaimLister struct {
	indexer cache.Indexer
}

// NewDistccClaimLister returns a new DistccClaimLister.
func NewDistccClaimLister(indexer cache.Indexer) DistccClaimLister {
	return &distccClaimLister{indexer: indexer}
}

// List lists all DistccClaims in the indexer.
func (s *distccClaimLister) List(selector labels.Selector) (ret []*v1alpha1.DistccClaim, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DistccClaim))
	})
	return ret, err
}

// DistccClaims returns an object that can list and get DistccClaims.
func (s *distccClaimLister) DistccClaims(namespace string) DistccClaimNamespaceLister {
	return distccClaimNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DistccClaimNamespaceLister helps list and get DistccClaims.
type DistccClaimNamespaceLister interface {
	// List lists all DistccClaims in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DistccClaim, err error)
	// Get retrieves the DistccClaim from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DistccClaim, error)
	DistccClaimNamespaceListerExpansion
}

// distccClaimNamespaceLister implements the DistccClaimNamespaceLister
// interface.
type distccClaimNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DistccClaims in the indexer for a given namespace.
func (s distccClaimNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DistccClaim, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DistccClaim))
	})
	return ret, err
}

// Get retrieves the DistccClaim from the indexer for a given namespace and name.
func (s distccClaimNamespaceLister) Get(name string) (*v1alpha1.DistccClaim, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("distccclaim"), name)
	}
	return obj.(*v1alpha1.DistccClaim), nil
}
